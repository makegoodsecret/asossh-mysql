<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="com.secret.pojo.UserFriendGroupPojo" table="user_friend_group" catalog="asossh">
        <id name="userFriendGroupId" type="java.lang.Integer">
            <column name="user_friend_group_id" />
            <generator class="identity" />
        </id>
      <!--   <property name="userId" type="java.lang.Integer">
            <column name="user_id" not-null="true" />
        </property> -->
        <property name="userFriendGroupName" type="java.lang.String">
            <column name="user_friend_group_name" length="64" not-null="true" />
        </property>
        <property name="userFriendGroupPublicnotice" type="java.lang.String">
            <column name="user_friend_group_publicnotice" length="128" not-null="true" />
        </property>
      <!--   <property name="userFriendGroupTypeId" type="java.lang.Integer">
            <column name="user_friend_group_type_id" not-null="true" />
        </property> -->
        <property name="userFriendGroupTime" type="java.sql.Timestamp">
            <column name="user_friend_group_time" length="0"   />
        </property>
        
         <!-- 与用户一对一关联 -->
       <many-to-one name="userPojo" class="com.secret.pojo.UserPojo" column="USER_ID" 
         unique="true" cascade="save-update" lazy="false" fetch="join"
       ></many-to-one>
       <many-to-one name="userFriendGroupTypePojo" class="com.secret.pojo.UserFriendGroupTypePojo"
        column="USER_FRIEND_GROUP_TYPE_ID" cascade="save-update" lazy="false" fetch="join" 
       ></many-to-one>
   <!-- 设置与用户多对多关联 -->    
       <set name="userPojoSet" cascade="save-update" 
          table="GROUP_USER"  lazy="false" inverse="true"
       >
       	<key column="USER_FRIEND_GROUP_ID"></key>
       	<many-to-many class="com.secret.pojo.UserPojo"
       	  column="USER_ID"
       	></many-to-many>
       </set>
    </class>
</hibernate-mapping>
